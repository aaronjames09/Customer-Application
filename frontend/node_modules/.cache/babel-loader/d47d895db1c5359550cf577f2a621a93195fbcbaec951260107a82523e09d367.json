{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\OneDrive\\\\Documents\\\\Projects\\\\Customer Application\\\\customer-app\\\\src\\\\components\\\\PaginationTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useTable, useFilters, usePagination } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { GlobalFilter } from './GlobalFilter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaginationTable = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useFilters, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroups => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroups.getHeaderGroupProps(),\n          children: headerGroups.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(PaginationTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n_c = PaginationTable;\nvar _c;\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"names":["React","useMemo","useTable","useFilters","usePagination","MOCK_DATA","COLUMNS","GlobalFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginationTable","_s","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","prepareRow","children","map","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aaron/OneDrive/Documents/Projects/Customer Application/customer-app/src/components/PaginationTable.js"],"sourcesContent":["import React, {useMemo} from 'react'\r\nimport { useTable, useFilters, usePagination } from 'react-table'\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport { COLUMNS } from './columns'\r\nimport './table.css'\r\nimport { GlobalFilter } from './GlobalFilter'\r\n\r\nexport const PaginationTable = () => {\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n    \r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n    }, useFilters,\r\n    usePagination)\r\n\r\n    const { \r\n        getTableProps, \r\n        getTableBodyProps, \r\n        headerGroups, \r\n        page, \r\n        nextPage,\r\n        previousPage,\r\n        prepareRow, \r\n    } = tableInstance\r\n    \r\n  return (\r\n    <>\r\n    <table {...getTableProps()}>\r\n        <thead>\r\n            {\r\n                headerGroups.map(headerGroups => (\r\n                    <tr {...headerGroups.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroups.headers.map((column) => (\r\n                            <th {...column.getHeaderProps()}>\r\n                            {column.render('Header')}\r\n                            <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                            </th>\r\n                        ))}\r\n                    </tr>        \r\n                ) )\r\n            }\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {\r\n                page.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map( cell =>{\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n        </tbody>   \r\n    </table>\r\n    <div>\r\n        <button onClick={() => previousPage() }>Previous</button>\r\n        <button onClick={() => nextPage() }>Next</button>\r\n    </div>\r\n    </>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}