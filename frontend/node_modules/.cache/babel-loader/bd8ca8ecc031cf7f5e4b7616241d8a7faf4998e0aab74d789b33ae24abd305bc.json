{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\OneDrive\\\\Documents\\\\Git Projects\\\\Customer Application\\\\customer-app\\\\frontend\\\\src\\\\components\\\\PaginationTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useTable, useFilters, usePagination, useGlobalFilter } from 'react-table';\nimport axios from 'axios';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { GlobalFilter } from './GlobalFilter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaginationTable = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pageCount, setPageCount] = useState(0);\n\n  // Function to fetch data from the API\n  const fetchData = async (pageIndex, pageSize, globalFilter) => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:3000/customers?page=${pageIndex + 1}&limit=${pageSize}&filter=${globalFilter || ''}`);\n      setData(response.data.data); // Adjust based on actual response structure\n      setPageCount(Math.ceil(response.data.totalRecords / pageSize)); // Adjust based on actual response structure\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchData(0, 20); // Default pageIndex and pageSize\n  }, []);\n\n  // Table instance with pagination, filters, and global filter\n  const tableInstance = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 20\n    },\n    manualPagination: true,\n    pageCount\n  }, useGlobalFilter, useFilters, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    state,\n    prepareRow,\n    setGlobalFilter,\n    // Get the setGlobalFilter function from useGlobalFilter\n    state: {\n      globalFilter\n    } // Get the globalFilter from state\n  } = tableInstance;\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n\n  // Fetch data whenever pageIndex, pageSize, or globalFilter changes\n  useEffect(() => {\n    fetchData(pageIndex, pageSize, globalFilter);\n  }, [pageIndex, pageSize, globalFilter]);\n\n  // Debugging: Log data and columns to ensure they are defined\n  console.log('Columns:', columns);\n  console.log('Data:', data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      filter: globalFilter,\n      setFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [state.pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(PaginationTable, \"kbQd6c3WRhCA6kZmBEsA2NBI460=\", false, function () {\n  return [useTable];\n});\n_c = PaginationTable;\nvar _c;\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useTable","useFilters","usePagination","useGlobalFilter","axios","COLUMNS","GlobalFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginationTable","_s","columns","data","setData","loading","setLoading","pageCount","setPageCount","fetchData","pageIndex","pageSize","globalFilter","response","get","Math","ceil","totalRecords","error","console","tableInstance","initialState","manualPagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","prepareRow","setGlobalFilter","log","children","filter","setFilter","fileName","_jsxFileName","lineNumber","columnNumber","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","length","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aaron/OneDrive/Documents/Git Projects/Customer Application/customer-app/frontend/src/components/PaginationTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { useTable, useFilters, usePagination, useGlobalFilter } from 'react-table';\r\nimport axios from 'axios';\r\nimport { COLUMNS } from './columns';\r\nimport './table.css';\r\nimport { GlobalFilter } from './GlobalFilter';\r\n\r\nexport const PaginationTable = () => {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pageCount, setPageCount] = useState(0);\r\n\r\n  // Function to fetch data from the API\r\n  const fetchData = async (pageIndex, pageSize, globalFilter) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/customers?page=${pageIndex + 1}&limit=${pageSize}&filter=${globalFilter || ''}`);\r\n      setData(response.data.data); // Adjust based on actual response structure\r\n      setPageCount(Math.ceil(response.data.totalRecords / pageSize)); // Adjust based on actual response structure\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    fetchData(0, 20); // Default pageIndex and pageSize\r\n  }, []);\r\n\r\n  // Table instance with pagination, filters, and global filter\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data,\r\n    initialState: { pageIndex: 0, pageSize: 20 },\r\n    manualPagination: true,\r\n    pageCount,\r\n  }, useGlobalFilter, useFilters, usePagination);\r\n\r\n  const { \r\n    getTableProps, \r\n    getTableBodyProps, \r\n    headerGroups, \r\n    page, \r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    prepareRow,\r\n    setGlobalFilter, // Get the setGlobalFilter function from useGlobalFilter\r\n    state: { globalFilter } // Get the globalFilter from state\r\n  } = tableInstance;\r\n\r\n  const { pageIndex, pageSize } = state;\r\n\r\n  // Fetch data whenever pageIndex, pageSize, or globalFilter changes\r\n  useEffect(() => {\r\n    fetchData(pageIndex, pageSize, globalFilter);\r\n  }, [pageIndex, pageSize, globalFilter]);\r\n\r\n  // Debugging: Log data and columns to ensure they are defined\r\n  console.log('Columns:', columns);\r\n  console.log('Data:', data);\r\n\r\n  return (\r\n    <>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {\r\n            headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {\r\n                  headerGroup.headers.map(column => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      {column.render('Header')}\r\n                      <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                    </th>\r\n                  ))\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {\r\n            page.map(row => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {\r\n                    row.cells.map(cell => (\r\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    ))\r\n                  }\r\n                </tr>\r\n              );\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {state.pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\r\n      </div>\r\n      {loading && <div>Loading...</div>}\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}