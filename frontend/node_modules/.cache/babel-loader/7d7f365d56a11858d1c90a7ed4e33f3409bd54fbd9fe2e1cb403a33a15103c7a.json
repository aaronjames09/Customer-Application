{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\OneDrive\\\\Documents\\\\Git Projects\\\\Customer Application\\\\customer-app\\\\frontend\\\\src\\\\components\\\\PaginationTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useTable, useFilters, usePagination } from 'react-table';\nimport axios from 'axios';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaginationTable = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pageCount, setPageCount] = useState(0);\n\n  // Function to fetch data from the API\n  const fetchData = async (pageIndex, pageSize) => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:3000/customers?page=${pageIndex + 1}&limit=${pageSize}`);\n      setData(response.data.data); // Adjust based on actual response structure\n      setPageCount(Math.ceil(response.data.totalRecords / pageSize)); // Adjust based on actual response structure\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchData(0, 20); // Default pageIndex and pageSize\n  }, []);\n\n  // Table instance with pagination and filters\n  const tableInstance = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 20\n    },\n    manualPagination: true,\n    pageCount\n  }, useFilters, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    state,\n    prepareRow\n  } = tableInstance;\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n\n  // Fetch data whenever pageIndex or pageSize changes\n  useEffect(() => {\n    fetchData(pageIndex, pageSize);\n  }, [pageIndex, pageSize]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [state.pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(PaginationTable, \"kbQd6c3WRhCA6kZmBEsA2NBI460=\", false, function () {\n  return [useTable];\n});\n_c = PaginationTable;\nvar _c;\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useTable","useFilters","usePagination","axios","COLUMNS","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginationTable","_s","columns","data","setData","loading","setLoading","pageCount","setPageCount","fetchData","pageIndex","pageSize","response","get","Math","ceil","totalRecords","error","console","tableInstance","initialState","manualPagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","prepareRow","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","length","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aaron/OneDrive/Documents/Git Projects/Customer Application/customer-app/frontend/src/components/PaginationTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { useTable, useFilters, usePagination } from 'react-table';\r\nimport axios from 'axios';\r\nimport { COLUMNS } from './columns';\r\nimport './table.css';\r\n\r\nexport const PaginationTable = () => {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pageCount, setPageCount] = useState(0);\r\n\r\n  // Function to fetch data from the API\r\n  const fetchData = async (pageIndex, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/customers?page=${pageIndex + 1}&limit=${pageSize}`);\r\n      setData(response.data.data); // Adjust based on actual response structure\r\n      setPageCount(Math.ceil(response.data.totalRecords / pageSize)); // Adjust based on actual response structure\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    fetchData(0, 20); // Default pageIndex and pageSize\r\n  }, []);\r\n\r\n  // Table instance with pagination and filters\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data,\r\n    initialState: { pageIndex: 0, pageSize: 20 },\r\n    manualPagination: true,\r\n    pageCount,\r\n  }, useFilters, usePagination);\r\n\r\n  const { \r\n    getTableProps, \r\n    getTableBodyProps, \r\n    headerGroups, \r\n    page, \r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    prepareRow,\r\n  } = tableInstance;\r\n\r\n  const { pageIndex, pageSize } = state;\r\n\r\n  // Fetch data whenever pageIndex or pageSize changes\r\n  useEffect(() => {\r\n    fetchData(pageIndex, pageSize);\r\n  }, [pageIndex, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {\r\n            headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {\r\n                  headerGroup.headers.map(column => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      {column.render('Header')}\r\n                      <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                    </th>\r\n                  ))\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {\r\n            page.map(row => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {\r\n                    row.cells.map(cell => (\r\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    ))\r\n                  }\r\n                </tr>\r\n              );\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {state.pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\r\n      </div>\r\n      {loading && <div>Loading...</div>}\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}