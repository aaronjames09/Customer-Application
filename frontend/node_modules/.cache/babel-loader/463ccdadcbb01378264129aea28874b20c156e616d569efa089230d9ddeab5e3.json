{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\OneDrive\\\\Documents\\\\Git Projects\\\\Customer Application\\\\customer-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Pagination from './components/Pagination';\n\n// function App() {\n//   const [dataTable, setDataTable] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const [totalRecords, setTotalRecords] = useState(0); \n//   const [totalPages, setTotalPages] = useState(0);\n//   const USER_PER_PAGE = 15;\n\n//   useEffect(async() => {\n//     // const res = axios('http://localhost:3000/customers')\n//     //   .then(res => setDataTable(res.data))\n//     //   .catch(err => console.log(err))\n//     const res = await axios.get('http://localhost:3000/customers', {\n//       params: {\n//         page,\n//         limit: USER_PER_PAGE\n//       }\n//     });\n//     // setDataTable(res.data);\n//     setDataTable(res.data|| []);\n\n//     console.log(res);\n//     setLoading(false);\n//     setTotalRecords(res.data.totalRecords || 0);\n//     // setTotalPages(Math.ceil(res.data.totalRecords / USER_PER_PAGE));\n//     setTotalPages(Math.max(0, Math.ceil(res.data.totalRecords / USER_PER_PAGE)));\n//     console.log('Current Page:', page);\n//     console.log('Total Pages:', totalPages);\n//   }, [page,USER_PER_PAGE]);\n\n//   const column = [\n//     { heading: 'Serial No', value: 'sno' },\n//     { heading: 'Customer Name', value: 'customer_name' },\n//     { heading: 'Age', value: 'age' },\n//     { heading: 'Phone', value: 'phone' },\n//     { heading: 'Customer Location', value: 'customer_location' },\n//     { heading: 'Created At', value: 'created_at' },\n//   ]\n//   const handleClick = num => {\n//     setPage(num);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Customer Application</h1>\n//       <Table data={dataTable} column={column} />\n//       <Pagination totalPages={totalPages} currentPage={page} handleClick={handleClick} />\n//     </div>\n//   );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  useEffect(() => {\n    const getAPI = () => {\n      // Change this endpoint to whatever local or online address you have\n      // Local PostgreSQL Database\n      const API = 'http://127.0.0.1:5000/';\n      fetch(API).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        setLoading(false);\n        setApiData(data);\n      });\n    };\n    getAPI();\n  }, []);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const column = [{\n    heading: 'Serial No',\n    value: 'sno'\n  }, {\n    heading: 'Customer Name',\n    value: 'customer_name'\n  }, {\n    heading: 'Age',\n    value: 'age'\n  }, {\n    heading: 'Phone',\n    value: 'phone'\n  }, {\n    heading: 'Customer Location',\n    value: 'customer_location'\n  }, {\n    heading: 'Created At',\n    value: 'created_at'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: dataTable,\n      column: column\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      currentPage: page,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TZA0s8b8vs6i1DnK2O1QZ2NUYcU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","Table","Pagination","jsxDEV","_jsxDEV","App","_s","getAPI","API","fetch","then","response","console","log","json","data","setLoading","setApiData","apiData","loading","column","heading","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dataTable","totalPages","currentPage","page","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/aaron/OneDrive/Documents/Git Projects/Customer Application/customer-app/frontend/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Pagination from './components/Pagination';\n\n// function App() {\n//   const [dataTable, setDataTable] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const [totalRecords, setTotalRecords] = useState(0); \n//   const [totalPages, setTotalPages] = useState(0);\n//   const USER_PER_PAGE = 15;\n\n//   useEffect(async() => {\n//     // const res = axios('http://localhost:3000/customers')\n//     //   .then(res => setDataTable(res.data))\n//     //   .catch(err => console.log(err))\n//     const res = await axios.get('http://localhost:3000/customers', {\n//       params: {\n//         page,\n//         limit: USER_PER_PAGE\n//       }\n//     });\n//     // setDataTable(res.data);\n//     setDataTable(res.data|| []);\n\n//     console.log(res);\n//     setLoading(false);\n//     setTotalRecords(res.data.totalRecords || 0);\n//     // setTotalPages(Math.ceil(res.data.totalRecords / USER_PER_PAGE));\n//     setTotalPages(Math.max(0, Math.ceil(res.data.totalRecords / USER_PER_PAGE)));\n//     console.log('Current Page:', page);\n//     console.log('Total Pages:', totalPages);\n//   }, [page,USER_PER_PAGE]);\n\n//   const column = [\n//     { heading: 'Serial No', value: 'sno' },\n//     { heading: 'Customer Name', value: 'customer_name' },\n//     { heading: 'Age', value: 'age' },\n//     { heading: 'Phone', value: 'phone' },\n//     { heading: 'Customer Location', value: 'customer_location' },\n//     { heading: 'Created At', value: 'created_at' },\n//   ]\n//   const handleClick = num => {\n//     setPage(num);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Customer Application</h1>\n//       <Table data={dataTable} column={column} />\n//       <Pagination totalPages={totalPages} currentPage={page} handleClick={handleClick} />\n//     </div>\n//   );\n// }\n\n// export default App;\nconst App = () => {\n  useEffect(() => {\n      const getAPI = () => {\n          // Change this endpoint to whatever local or online address you have\n          // Local PostgreSQL Database\n          const API = 'http://127.0.0.1:5000/';\n          fetch(API)\n              .then((response) => {\n                  console.log(response);\n                  return response.json();\n              })\n              .then((data) => {\n                  console.log(data);\n                  setLoading(false);\n                  setApiData(data);\n              });\n      };\n      getAPI();\n  }, []);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const column = [\n         { heading: 'Serial No', value: 'sno' },\n         { heading: 'Customer Name', value: 'customer_name' },\n         { heading: 'Age', value: 'age' },\n         { heading: 'Phone', value: 'phone' },\n         { heading: 'Customer Location', value: 'customer_location' },\n         { heading: 'Created At', value: 'created_at' },\n       ]\n  return (\n    <div className=\"App\">\n           <h1>Customer Application</h1>\n           <Table data={dataTable} column={column} />\n           <Pagination totalPages={totalPages} currentPage={page} handleClick={handleClick} />\n         </div>\n  );\n};\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBP,SAAS,CAAC,MAAM;IACZ,MAAMQ,MAAM,GAAGA,CAAA,KAAM;MACjB;MACA;MACA,MAAMC,GAAG,GAAG,wBAAwB;MACpCC,KAAK,CAACD,GAAG,CAAC,CACLE,IAAI,CAAEC,QAAQ,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,OAAOA,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;QACjBC,UAAU,CAAC,KAAK,CAAC;QACjBC,UAAU,CAACF,IAAI,CAAC;MACpB,CAAC,CAAC;IACV,CAAC;IACDR,MAAM,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,MAAM,CAACW,OAAO,EAAED,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEH,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMoB,MAAM,GAAG,CACR;IAAEC,OAAO,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAM,CAAC,EACtC;IAAED,OAAO,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAgB,CAAC,EACpD;IAAED,OAAO,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChC;IAAED,OAAO,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACpC;IAAED,OAAO,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAoB,CAAC,EAC5D;IAAED,OAAO,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAa,CAAC,CAC/C;EACN,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACbpB,OAAA;MAAAoB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BxB,OAAA,CAACH,KAAK;MAACc,IAAI,EAAEc,SAAU;MAACT,MAAM,EAAEA;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CxB,OAAA,CAACF,UAAU;MAAC4B,UAAU,EAAEA,UAAW;MAACC,WAAW,EAAEC,IAAK;MAACC,WAAW,EAAEA;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEf,CAAC;AAACtB,EAAA,CApCID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}