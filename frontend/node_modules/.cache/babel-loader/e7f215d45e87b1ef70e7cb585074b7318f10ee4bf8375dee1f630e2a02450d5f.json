{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\OneDrive\\\\Documents\\\\Git Projects\\\\Customer Application\\\\customer-app\\\\frontend\\\\src\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  totalPages,\n  handleClick,\n  currentPage\n}) => {\n  // Ensure totalPages is at least 1\n  const pages = totalPages > 0 ? [...Array(totalPages).keys()].map(num => num + 1) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), pages.map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(num),\n      style: {\n        fontWeight: num === currentPage ? 'bold' : 'normal'\n      },\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(currentPage + 1),\n      disabled: currentPage === totalPages || totalPages === 0,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","totalPages","handleClick","currentPage","pages","Array","keys","map","num","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/aaron/OneDrive/Documents/Git Projects/Customer Application/customer-app/frontend/src/components/Pagination.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Pagination = ({ totalPages, handleClick, currentPage }) => {\r\n  // Ensure totalPages is at least 1\r\n  const pages = totalPages > 0 ? [...Array(totalPages).keys()].map(num => num + 1) : [];\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => handleClick(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        Previous\r\n      </button>\r\n      \r\n      {pages.map(num => (\r\n        <button\r\n          key={num}\r\n          onClick={() => handleClick(num)}\r\n          style={{ fontWeight: num === currentPage ? 'bold' : 'normal' }}\r\n        >\r\n          {num}\r\n        </button>\r\n      ))}\r\n\r\n      <button\r\n        onClick={() => handleClick(currentPage + 1)}\r\n        disabled={currentPage === totalPages || totalPages === 0}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EAC/D;EACA,MAAMC,KAAK,GAAGH,UAAU,GAAG,CAAC,GAAG,CAAC,GAAGI,KAAK,CAACJ,UAAU,CAAC,CAACK,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;EAErF,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MACEW,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACC,WAAW,GAAG,CAAC,CAAE;MAC5CQ,QAAQ,EAAER,WAAW,KAAK,CAAE;MAAAM,QAAA,EAC7B;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERX,KAAK,CAACG,GAAG,CAACC,GAAG,iBACZT,OAAA;MAEEW,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACM,GAAG,CAAE;MAChCQ,KAAK,EAAE;QAAEC,UAAU,EAAET,GAAG,KAAKL,WAAW,GAAG,MAAM,GAAG;MAAS,CAAE;MAAAM,QAAA,EAE9DD;IAAG,GAJCA,GAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKF,CACT,CAAC,eAEFhB,OAAA;MACEW,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACC,WAAW,GAAG,CAAC,CAAE;MAC5CQ,QAAQ,EAAER,WAAW,KAAKF,UAAU,IAAIA,UAAU,KAAK,CAAE;MAAAQ,QAAA,EAC1D;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAG,EAAA,GA/BKlB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}